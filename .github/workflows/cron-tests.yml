name: Cron tests

on:
  schedule:
    - cron: "0 10 * * 1"  # Mondays @ 6AM Eastern
  pull_request:
    # We also want this workflow triggered if the 'Extra CI' label is added
    # or present when PR is updated
    types:
      - synchronize
      - labeled

jobs:
  tests:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    if: (github.event_name == 'schedule' || contains(github.event.pull_request.labels.*.name, 'Extra CI'))
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:

          - name: Python 3.9 with coverage
            python: 3.9
            toxenv: py39-test-cov

          - name: Python 3.8 with all optional dependencies
            python: 3.8
            toxenv: py38-test-extradeps
            toxargs: -v --develop

          - name: Python 3.7
            python: 3.7
            toxenv: py37-test

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Set up Python ${{ matrix.python-version }} on ${{ matrix.os }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    # Windows:
    - name: Install Python dependencies - Windows
      if: startsWith(matrix.os, 'windows')
      shell: bash -l {0}
      run: |
        conda install -c conda-forge -q gsl libpython
        python -m pip install -e .[test]
        python -m pip install virtualenv==20.0.33  # 20.0.34 broken!
        python -m pip install tox

    - name: Run tests - Windows
      shell: bash -l {0}
      if: startsWith(matrix.os, 'windows')
      run: |
        tox ${{ matrix.toxargs }} -e ${{ matrix.toxenv }} -- ${{ matrix.toxposargs }}

    # Mac:
    - name: Setup Mac - GSL
      if: runner.os == 'macOS'
      run: |
        brew install gsl

    # Ubuntu:
    - name: Setup Linux - GSL
      if: runner.os == 'Linux'
      run: |
        sudo apt-get install gsl-bin libgsl0-dev build-essential

    # Any *nix:
    - name: Install Python dependencies - nix
      if: "!startsWith(matrix.os, 'windows')"
      run: python -m pip install --upgrade tox codecov

    - name: Run tests - nix
      run: tox ${{ matrix.toxargs }} -e ${{ matrix.toxenv }} -- ${{ matrix.toxposargs }}

    # Coverage:
    - name: Upload coverage report to codecov
      uses: codecov/codecov-action@v1
      if: steps.check_files.outputs.files_exists == 'true' && runner.os == 'Linux'
      with:
        file: ./coverage.xml # optional
